{"version":3,"sources":["components/Cube/Cube.module.css","components/Header/Header.module.css","App.module.css","components/Net/Net.module.css","components/GameOver/GameOver.module.css","initial-state.js","app-helper.js","components/Header/Header.js","components/Cube/Cube.js","components/Net/Net.js","components/GameOver/GameOver.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","w","h","initialSnakeState","body","x","y","food","direction","directionChanged","initialGameState","score","lost","pause","target","speed","level","randomInt","min","max","Math","floor","random","randomLocation","Header","props","showInfo","info","onPause","className","classes","infoCon","Cube","cube","snakeHead","bodyPart","part","snakeBody","deg","stop","dir","style","transform","snakeHeadOnStop","Net","snakeFood","check","size","width","height","useState","net","setNet","useEffect","n","i","push","map","toString","GameOver","restart","type","onClick","finalScore","App","callback","isDesktop","window","innerWidth","intervalRef","useRef","game","setGame","snake","setSnake","HeadX","HeadY","snakeAction","property","value","prev","snakeOnCube","onCube","forEach","cell","move","current","interval","setInterval","clearInterval","document","onkeydown","e","keyCode","pauseGame","code","parseKeyCode","slice","prevState","checkDeath","newSnake","ate","foodLocation","checkFood","pop","openInDesktopAlert","app","indexOf","displayFits","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0527f646.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cube\":\"Cube_cube__2bilb\",\"snakeBody\":\"Cube_snakeBody__3MT3j\",\"food\":\"Cube_food__6zWZB\",\"snakeHead\":\"Cube_snakeHead__WX2kv\",\"snakeHeadOnStop\":\"Cube_snakeHeadOnStop__1bLI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoCon\":\"Header_infoCon__2A6m_\",\"score\":\"Header_score__1VpiN\",\"level\":\"Header_level__2GNK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1rz_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"net\":\"Net_net__tyqej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"finalScore\":\"GameOver_finalScore__wQwvi\"};","export const w = 10;\r\nexport const h = 20;\r\nconst initialFoodState = { x: 2, y: 7 };\r\nconst initialBodyState = [\r\n  { x: 0, y: 0 },\r\n  { x: 1, y: 0 },\r\n  { x: 2, y: 0 },\r\n  { x: 3, y: 0 },\r\n];\r\nexport const initialSnakeState = {\r\n  body: initialBodyState,\r\n  food: initialFoodState,\r\n  direction: 'right',\r\n  directionChanged: false,\r\n};\r\nexport const initialGameState = {\r\n  score: 0,\r\n  lost: false,\r\n  pause: false,\r\n  target: 5,\r\n  speed: 90,\r\n  level: 1,\r\n};\r\n","import { w, h } from './initial-state';\r\nfunction randomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function randomLocation() {\r\n  return { x: randomInt(0, w - 1), y: randomInt(0, h - 1) };\r\n}\r\nexport function parseKeyCode(code) {\r\n  let direction;\r\n  switch (code) {\r\n    case 37:\r\n      direction = 'left';\r\n      break;\r\n    case 38:\r\n      direction = 'up';\r\n      break;\r\n    case 39:\r\n      direction = 'right';\r\n      break;\r\n    case 40: //down\r\n      direction = 'down';\r\n      break;\r\n    default:\r\n      direction = 'right';\r\n  }\r\n\r\n  return direction;\r\n}\r\nexport function wrongDirections(dir, code) {\r\n  return (dir === 'right' && code === 37) ||\r\n    (dir === 'left' && code === 39) ||\r\n    (dir === 'up' && code === 40) ||\r\n    (dir === 'down' && code === 38)\r\n    ? true\r\n    : false;\r\n}\r\n","import classes from './Header.module.css';\r\nfunction Header(props) {\r\n  const { showInfo, info } = props;\r\n  const [score, onPause, target, level] = info;\r\n  return (\r\n    <header>\r\n      <h1>Snake Game</h1>\r\n\r\n      {showInfo && (\r\n        <>\r\n          <p>\r\n            <div className={classes.level}> Level {level}</div>\r\n            eat {target} apples to go up!\r\n          </p>\r\n          <div className={classes.infoCon}>\r\n            <p className={classes.score}>Score: {score} </p>\r\n            <p>\r\n              {onPause\r\n                ? 'Press arrow keys to continue'\r\n                : 'Press space bar to pause game'}\r\n            </p>\r\n          </div>\r\n        </>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import classes from './Cube.module.css';\r\nfunction Cube(props) {\r\n  const snakeHead = props.bodyPart.part === 'head';\r\n  const snakeBody = props.bodyPart.part === 'body';\r\n  let cube;\r\n  if (snakeHead) {\r\n    let deg;\r\n    let stop = false;\r\n    switch (props.bodyPart.dir) {\r\n      case 'left':\r\n        deg = '0';\r\n        break;\r\n      case 'up':\r\n        deg = '90';\r\n        break;\r\n      case 'right':\r\n        deg = '180';\r\n        break;\r\n      case 'down':\r\n        deg = '270';\r\n        break;\r\n      case 'stop':\r\n        stop = true;\r\n        break;\r\n      default:\r\n        deg = '0';\r\n    }\r\n    cube = (\r\n      <div\r\n        style={{ transform: `rotate(${deg}deg)` }}\r\n        className={`${classes.cube} ${\r\n          !stop ? classes.snakeHead : classes.snakeHeadOnStop\r\n        }  `}\r\n      >\r\n        {stop && <span>Pause</span>}\r\n      </div>\r\n    );\r\n  } else if (props.food) {\r\n    cube = <div className={`${classes.cube}  ${classes.food} `}></div>;\r\n  } else if (snakeBody) {\r\n    cube = <div className={`${classes.cube} ${classes.snakeBody}`}> </div>;\r\n  } else {\r\n    cube = <div className={`${classes.cube} `}></div>;\r\n  }\r\n\r\n  return <>{cube}</>;\r\n}\r\n\r\nexport default Cube;\r\n","import classes from './Net.module.css';\r\nimport Cube from '../Cube/Cube';\r\nimport { useState, useEffect } from 'react';\r\nfunction Net(props) {\r\n  const { snakeFood, check, size } = props;\r\n  const { width, height } = size;\r\n  const [net, setNet] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let n = [];\r\n    for (let i = 0; i < width; i++) {\r\n      for (let x = 0; x < height; x++) {\r\n        n.push({ x: i, y: x });\r\n      }\r\n    }\r\n    setNet(n);\r\n  }, [width, height]);\r\n  return (\r\n    <div className={classes.net}>\r\n      {net.map((cube) => {\r\n        return (\r\n          <Cube\r\n            key={Math.random().toString()}\r\n            bodyPart={check(cube)}\r\n            food={snakeFood.y === cube.y && snakeFood.x === cube.x}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Net;\r\n","import classes from './GameOver.module.css';\r\nfunction GameOver(props) {\r\n  const { restart, score } = props;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Game Over</h2>\r\n      <p>Oh no! you ate yourself.</p>\r\n      <button type=\"button\" onClick={restart}>\r\n        Restart Game\r\n      </button>\r\n      <p className={classes.finalScore}>Your final Score: {score} </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;\r\n","import { useEffect, useRef, useState } from 'react';\nimport { randomLocation, parseKeyCode, wrongDirections } from './app-helper';\nimport { initialSnakeState, initialGameState, w, h } from './initial-state';\nimport classes from './App.module.css';\nimport Header from './components/Header/Header';\nimport Net from './components/Net/Net';\nimport GameOver from './components/GameOver/GameOver';\nfunction App() {\n  const isDesktop = window.innerWidth > 850;\n  const intervalRef = useRef(() => {});\n  const [game, setGame] = useState(initialGameState);\n  const [snake, setSnake] = useState(initialSnakeState);\n  const HeadX = snake.body[0].x;\n  const HeadY = snake.body[0].y;\n  const snakeAction = (property, value) => {\n    setSnake((prev) => {\n      return { ...prev, [property]: value };\n    });\n  };\n  const snakeOnCube = (cube, part = snake.body) => {\n    let onCube = false;\n    part.forEach((cell) => {\n      if (cell.y === cube.y && cell.x === cube.x) onCube = true;\n    });\n    return onCube;\n  };\n  const checkDeath = () => {\n    const snakeBody = snake.body.slice(1);\n    const headHitBody = snakeOnCube(snake.body[0], snakeBody);\n    if (headHitBody) {\n      setGame((prevState) => {\n        return { ...prevState, lost: true, pause: true };\n      });\n    }\n  };\n  const setIntervalRef = (callback) => {\n    intervalRef.current = callback;\n  };\n  setIntervalRef(() => move());\n  useEffect(() => {\n    if (!game.pause) {\n      const interval = setInterval(() => {\n        snakeAction('directionChanged', false);\n        intervalRef.current();\n      }, game.speed);\n      return () => clearInterval(interval);\n    }\n  }, [game.pause, game.speed]);\n  const checkFood = () => {\n    let ate = false;\n    if (snake.food.y === HeadY && snake.food.x === HeadX) {\n      setGame((prev) => {\n        return {\n          ...prev,\n          score: prev.score + 10,\n          target: prev.target === 1 ? 5 : prev.target - 1,\n          speed: prev.target === 1 ? prev.speed - 5 : prev.speed,\n          level: prev.target === 1 ? prev.level + 1 : prev.level,\n        };\n      });\n      let foodLocation = randomLocation();\n      while (snakeOnCube(foodLocation)) {\n        foodLocation = randomLocation();\n      }\n      snakeAction('food', foodLocation);\n      ate = true;\n    }\n    return ate;\n  };\n\n  const keyPress = (e) => {\n    const { keyCode } = e;\n    if (keyCode === 32) {\n      pauseGame(true);\n      return;\n    }\n    if (keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40) {\n      game.pause && pauseGame(false);\n      const isWrongDirections = wrongDirections(snake.direction, keyCode);\n      if (isWrongDirections || (snake.directionChanged && !game.pause)) return;\n      const direction = parseKeyCode(keyCode);\n      snakeAction('direction', direction);\n    }\n    snakeAction('directionChanged', true);\n  };\n  document.onkeydown = keyPress;\n  const checkCube = (cube) => {\n    let body = { part: false, dir: null };\n    snake.body.forEach((cell) => {\n      if (cube.y === cell.y && cube.x === cell.x) {\n        if (snake.body.indexOf(cell) === 0) {\n          body.part = 'head';\n          body.dir = game.pause ? 'stop' : snake.direction;\n        } else {\n          body.part = 'body';\n        }\n      }\n    });\n    return body;\n  };\n  const move = () => {\n    checkDeath();\n    let newSnake = [];\n\n    switch (snake.direction) {\n      case 'left':\n        newSnake.push({ y: (HeadY - 1 + h) % h, x: HeadX });\n        break;\n      case 'up':\n        newSnake.push({ y: HeadY, x: (HeadX - 1 + w) % w });\n        break;\n      case 'right':\n        newSnake.push({ y: (HeadY + 1 + h) % h, x: HeadX });\n        break;\n      case 'down':\n        newSnake.push({ y: HeadY, x: (HeadX + 1 + w) % w });\n        break;\n      default:\n        return;\n    }\n    snake.body.forEach((cell) => {\n      newSnake.push(cell);\n    });\n    const ate = checkFood();\n    !ate && newSnake.pop();\n    snakeAction('body', newSnake);\n    return true;\n  };\n  const pauseGame = (value) => {\n    setGame((prev) => {\n      return { ...prev, pause: value };\n    });\n  };\n  const restartHandler = () => {\n    setSnake(initialSnakeState);\n    setGame(initialGameState);\n  };\n  const openInDesktopAlert = (\n    <p>\n      Please open this game on a full screen browser tab of a desktop device.\n    </p>\n  );\n  return (\n    <div className={classes.app}>\n      <Header\n        showInfo={isDesktop && !game.lost}\n        info={[game.score, game.pause, game.target, game.level]}\n      />\n      {isDesktop && !game.lost && (\n        <Net\n          size={{ width: w, height: h }}\n          snakeFood={snake.food}\n          check={checkCube}\n          displayFits={isDesktop}\n        />\n      )}\n      {!isDesktop && openInDesktopAlert}\n      {game.lost && <GameOver score={game.score} restart={restartHandler} />}\n      {isDesktop && <footer>Game created by omer zabtani // React.js </footer>}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
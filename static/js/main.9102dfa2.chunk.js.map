{"version":3,"sources":["components/Square.js","App.js","reportWebVitals.js","index.js","components/Square.module.css"],"names":["Square","props","sq","snakeHead","bodyPart","part","snakeBody","deg","stop","dir","style","transform","className","styles","square","headOnStop","head","food","on","w","h","initialFoodState","x","y","initialGameState","score","gameOver","initialSnakeState","App","randomInt","min","max","Math","floor","random","intervalRef","useRef","isDesktop","window","innerWidth","useState","snake","setSnake","direction","setDirection","directionChanged","setDirectionChanged","setFood","gameState","setGameState","net","setNet","snakeOnCube","cube","onCube","forEach","cell","checkDeath","useCallback","headHitBody","prevState","useEffect","interval","setInterval","current","clearInterval","n","i","push","callback","move","slice","newSnake","randomLocation","ate","foodLocation","checkFood","pop","document","onkeydown","e","keyCode","checkBody","body","indexOf","map","toString","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9102dfa2.chunk.js","sourcesContent":["import styles from './Square.module.css';\r\nfunction Square(props) {\r\n  const snakeHead = props.bodyPart.part === 'head';\r\n  const snakeBody = props.bodyPart.part === 'body';\r\n  let sq;\r\n  if (snakeHead) {\r\n    let deg;\r\n    let stop = false;\r\n    switch (props.bodyPart.dir) {\r\n      case 37: //left\r\n        deg = '0';\r\n        break;\r\n      case 38: //up\r\n        deg = '90';\r\n        break;\r\n      case 39: //rigth\r\n        deg = '180';\r\n        break;\r\n      case 40: //down\r\n        deg = '270';\r\n        break;\r\n      case 'stop':\r\n        stop = true;\r\n        break;\r\n      default:\r\n        deg = '0';\r\n    }\r\n    sq = (\r\n      <div\r\n        style={{ transform: `rotate(${deg}deg)` }}\r\n        className={`${styles.square} ${\r\n          !stop ? styles.head : styles.headOnStop\r\n        }  `}\r\n      >\r\n        {stop && <span>Pause</span>}\r\n      </div>\r\n    );\r\n  } else if (props.food) {\r\n    sq = <div className={`${styles.square}  ${styles.food} `}></div>;\r\n  } else if (snakeBody) {\r\n    sq = <div className={`${styles.square} ${styles.on}`}> </div>;\r\n  } else {\r\n    sq = <div className={`${styles.square} `}></div>;\r\n  }\r\n\r\n  return <>{sq}</>;\r\n}\r\n\r\nexport default Square;\r\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport Square from './components/Square';\nconst w = 10;\nconst h = 20;\nconst initialFoodState = { x: 2, y: 7 };\nconst initialGameState = { score: 0, gameOver: false };\nconst initialSnakeState = [\n  { x: 0, y: 0 },\n  { x: 1, y: 0 },\n];\nfunction App() {\n  const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  const intervalRef = useRef(() => {});\n  const isDesktop = window.innerWidth > 850;\n  const [snake, setSnake] = useState(initialSnakeState);\n  const [direction, setDirection] = useState(39);\n  const [directionChanged, setDirectionChanged] = useState(false);\n  const [food, setFood] = useState(initialFoodState);\n  const [gameState, setGameState] = useState(initialGameState);\n  const [net, setNet] = useState([]);\n  const snakeOnCube = (cube, part = snake) => {\n    let onCube = false;\n    part.forEach((cell) => {\n      if (cell.y === cube.y && cell.x === cube.x) onCube = true;\n    });\n    return onCube;\n  };\n  const checkDeath = useCallback((headHitBody) => {\n    if (headHitBody) {\n      setDirection('stop');\n      setGameState((prevState) => {\n        return { score: prevState.score, gameOver: true };\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (direction !== 'stop') {\n      checkDeath();\n      const interval = setInterval(() => {\n        setDirectionChanged(false);\n        intervalRef.current();\n      }, 70);\n      return () => clearInterval(interval);\n    }\n  }, [direction, checkDeath]);\n  useEffect(() => {\n    let n = [];\n    for (let i = 0; i < w; i++) {\n      for (let x = 0; x < h; x++) {\n        n.push({ x: i, y: x });\n      }\n    }\n    setNet(n);\n  }, []);\n\n  const checkFood = () => {\n    function randomLocation() {\n      return { x: randomInt(0, w - 1), y: randomInt(0, h - 1) };\n    }\n    let ate = false;\n    if (food.y === snake[0].y && food.x === snake[0].x) {\n      setGameState((prevState) => {\n        return { ...prevState, score: prevState.score + 10 };\n      });\n      let foodLocation = randomLocation();\n      while (snakeOnCube(foodLocation)) {\n        foodLocation = randomLocation();\n      }\n      setFood(foodLocation);\n      ate = true;\n    }\n    return ate;\n  };\n\n  const move = () => {\n    const snakeBody = snake.slice(1);\n    const headHitBody = snakeOnCube(snake[0], snakeBody);\n    checkDeath(headHitBody);\n    let newSnake = [];\n    switch (direction) {\n      case 37: //left\n        newSnake.push({ y: (snake[0].y - 1 + h) % h, x: snake[0].x });\n        break;\n      case 38: //up\n        newSnake.push({ y: snake[0].y, x: (snake[0].x - 1 + w) % w });\n\n        break;\n      case 39: //right\n        newSnake.push({ y: (snake[0].y + 1 + h) % h, x: snake[0].x });\n        break;\n      case 40: //down\n        newSnake.push({ y: snake[0].y, x: (snake[0].x + 1 + w) % w });\n        break;\n      default:\n        return;\n    }\n    snake.forEach((cell) => {\n      newSnake.push(cell);\n    });\n    const ate = checkFood();\n    !ate && newSnake.pop();\n    setSnake([...newSnake]);\n  };\n  const loopPosition = (callback) => {\n    intervalRef.current = callback;\n  };\n  loopPosition(() => move());\n  const keyPress = (e) => {\n    const { keyCode } = e;\n    if (\n      (direction === 39 && keyCode === 37) ||\n      (direction === 37 && keyCode === 39) ||\n      (direction === 38 && keyCode === 40) ||\n      (direction === 40 && keyCode === 38) ||\n      directionChanged\n    ) {\n      return;\n    }\n    if (keyCode === 32) {\n      setDirection('stop');\n      return;\n    }\n\n    if (keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40) {\n      setDirection(keyCode);\n    }\n    setDirectionChanged(true);\n  };\n  document.onkeydown = keyPress;\n  const checkBody = (cube) => {\n    let body = { part: false, dir: null };\n    snake.forEach((cell) => {\n      if (cube.y === cell.y && cube.x === cell.x) {\n        if (snake.indexOf(cell) === 0) {\n          body.part = 'head';\n          body.dir = direction;\n        } else {\n          body.part = 'body';\n        }\n      }\n    });\n    return body;\n  };\n  const restartHandler = () => {\n    setSnake(initialSnakeState);\n    setGameState(initialGameState);\n    setDirection(39);\n    setFood(initialFoodState);\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Snake Game</h1>\n        {isDesktop && !gameState.gameOver && (\n          <div className=\"infoCon\">\n            <p className=\"score\">Score: {gameState.score} </p>\n\n            <p>\n              {direction === 'stop'\n                ? 'Press arrow keys to continue'\n                : 'Press space bar to pause game'}\n            </p>\n          </div>\n        )}\n      </header>\n      {isDesktop && !gameState.gameOver && (\n        <div className=\"net\">\n          {net.map((cube) => {\n            return (\n              <Square\n                cube={cube}\n                key={Math.random().toString()}\n                bodyPart={checkBody(cube)}\n                food={food.y === cube.y && food.x === cube.x}\n              />\n            );\n          })}\n        </div>\n      )}\n      {!isDesktop && (\n        <p>\n          Please open this game on a full screen browser tab of a desktop\n          device.\n        </p>\n      )}\n      {gameState.gameOver && (\n        <div>\n          <h2>Game Over</h2>\n          <p>Oh no! you ate yourself.</p>\n          <button type=\"button\" onClick={restartHandler}>\n            Restart Game\n          </button>\n          <p className=\"score\">Your final Score: {gameState.score} </p>\n        </div>\n      )}\n      {isDesktop && <footer>Game created by omer zabtani // React.js </footer>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__1Zg7r\",\"on\":\"Square_on__1AOmW\",\"food\":\"Square_food__1Fo-M\",\"head\":\"Square_head__195Dj\",\"headOnStop\":\"Square_headOnStop__2dvc6\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Square.js","App.js","reportWebVitals.js","index.js","components/Square.module.css"],"names":["Square","props","sq","snakeHead","bodyPart","part","snakeBody","deg","stop","dir","style","transform","className","styles","square","headOnStop","head","food","on","w","h","initialFoodState","x","y","initialGameState","score","gameOver","initialSnakeState","App","callback","randomInt","min","max","Math","floor","random","intervalRef","useRef","isDesktop","window","innerWidth","useState","loop","setLoop","snake","setSnake","direction","setDirection","directionChanged","setDirectionChanged","setFood","gameState","setGameState","net","setNet","snakeOnCube","cube","onCube","forEach","cell","checkDeath","useCallback","headHitBody","prevState","move","current","useEffect","interval","setInterval","clearInterval","n","i","push","slice","newSnake","randomLocation","ate","foodLocation","checkFood","pop","document","onkeydown","e","keyCode","checkBody","body","indexOf","map","toString","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76704ad4.chunk.js","sourcesContent":["import styles from './Square.module.css';\r\nfunction Square(props) {\r\n  const snakeHead = props.bodyPart.part === 'head';\r\n  const snakeBody = props.bodyPart.part === 'body';\r\n  let sq;\r\n  if (snakeHead) {\r\n    let deg;\r\n    let stop = false;\r\n    switch (props.bodyPart.dir) {\r\n      case 37: //left\r\n        deg = '0';\r\n        break;\r\n      case 38: //up\r\n        deg = '90';\r\n        break;\r\n      case 39: //rigth\r\n        deg = '180';\r\n        break;\r\n      case 40: //down\r\n        deg = '270';\r\n        break;\r\n      case 'stop':\r\n        stop = true;\r\n        break;\r\n      default:\r\n        deg = '0';\r\n    }\r\n    sq = (\r\n      <div\r\n        style={{ transform: `rotate(${deg}deg)` }}\r\n        className={`${styles.square} ${\r\n          !stop ? styles.head : styles.headOnStop\r\n        }  `}\r\n      >\r\n        {stop && <span>Pause</span>}\r\n      </div>\r\n    );\r\n  } else if (props.food) {\r\n    sq = <div className={`${styles.square}  ${styles.food} `}></div>;\r\n  } else if (snakeBody) {\r\n    sq = <div className={`${styles.square} ${styles.on}`}> </div>;\r\n  } else {\r\n    sq = <div className={`${styles.square} `}></div>;\r\n  }\r\n\r\n  return <>{sq}</>;\r\n}\r\n\r\nexport default Square;\r\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport Square from './components/Square';\nconst w = 10;\nconst h = 20;\nconst initialFoodState = { x: 2, y: 7 };\nconst initialGameState = { score: 0, gameOver: false };\nconst initialSnakeState = [\n  { x: 0, y: 0 },\n  { x: 1, y: 0 },\n];\nfunction App() {\n  const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  const intervalRef = useRef(() => {});\n  const isDesktop = window.innerWidth > 850;\n  const [loop, setLoop] = useState(true);\n  const [snake, setSnake] = useState(initialSnakeState);\n  const [direction, setDirection] = useState(39);\n  const [directionChanged, setDirectionChanged] = useState(false);\n  const [food, setFood] = useState(initialFoodState);\n  const [gameState, setGameState] = useState(initialGameState);\n  const [net, setNet] = useState([]);\n  const snakeOnCube = (cube, part = snake) => {\n    let onCube = false;\n    part.forEach((cell) => {\n      if (cell.y === cube.y && cell.x === cube.x) onCube = true;\n    });\n    return onCube;\n  };\n  const checkDeath = useCallback((headHitBody) => {\n    if (headHitBody) {\n      setDirection('stop');\n      setGameState((prevState) => {\n        return { score: prevState.score, gameOver: true };\n      });\n    }\n  }, []);\n  const loopPosition = (callback) => {\n    intervalRef.current = callback;\n  };\n\n  loopPosition(() => move());\n  useEffect(() => {\n    if (loop) {\n      checkDeath();\n      const interval = setInterval(() => {\n        setDirectionChanged(false);\n        intervalRef.current();\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [loop, checkDeath]);\n  useEffect(() => {\n    let n = [];\n    for (let i = 0; i < w; i++) {\n      for (let x = 0; x < h; x++) {\n        n.push({ x: i, y: x });\n      }\n    }\n    setNet(n);\n  }, []);\n\n  const checkFood = () => {\n    function randomLocation() {\n      return { x: randomInt(0, w - 1), y: randomInt(0, h - 1) };\n    }\n    let ate = false;\n    if (food.y === snake[0].y && food.x === snake[0].x) {\n      setGameState((prevState) => {\n        return { ...prevState, score: prevState.score + 10 };\n      });\n      let foodLocation = randomLocation();\n      while (snakeOnCube(foodLocation)) {\n        foodLocation = randomLocation();\n      }\n      setFood(foodLocation);\n      ate = true;\n    }\n    return ate;\n  };\n\n  const move = () => {\n    const snakeBody = snake.slice(1);\n    const headHitBody = snakeOnCube(snake[0], snakeBody);\n    checkDeath(headHitBody);\n    let newSnake = [];\n    switch (direction) {\n      case 37: //left\n        newSnake.push({ y: (snake[0].y - 1 + h) % h, x: snake[0].x });\n        break;\n      case 38: //up\n        newSnake.push({ y: snake[0].y, x: (snake[0].x - 1 + w) % w });\n\n        break;\n      case 39: //right\n        newSnake.push({ y: (snake[0].y + 1 + h) % h, x: snake[0].x });\n        break;\n      case 40: //down\n        newSnake.push({ y: snake[0].y, x: (snake[0].x + 1 + w) % w });\n        break;\n      default:\n        return;\n    }\n    snake.forEach((cell) => {\n      newSnake.push(cell);\n    });\n    const ate = checkFood();\n    !ate && newSnake.pop();\n    setSnake([...newSnake]);\n    return true;\n  };\n\n  const keyPress = (e) => {\n    const { keyCode } = e;\n    if (\n      (direction === 39 && keyCode === 37) ||\n      (direction === 37 && keyCode === 39) ||\n      (direction === 38 && keyCode === 40) ||\n      (direction === 40 && keyCode === 38) ||\n      directionChanged\n    ) {\n      return;\n    }\n    if (keyCode === 32) {\n      setDirection('stop');\n\n      setLoop(false);\n      return;\n    }\n\n    if (keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40) {\n      setDirection(keyCode);\n      !loop && setLoop(true);\n    }\n    setDirectionChanged(true);\n  };\n  document.onkeydown = keyPress;\n  const checkBody = (cube) => {\n    let body = { part: false, dir: null };\n    snake.forEach((cell) => {\n      if (cube.y === cell.y && cube.x === cell.x) {\n        if (snake.indexOf(cell) === 0) {\n          body.part = 'head';\n          body.dir = direction;\n        } else {\n          body.part = 'body';\n        }\n      }\n    });\n    return body;\n  };\n  const restartHandler = () => {\n    setSnake(initialSnakeState);\n    setGameState(initialGameState);\n    setDirection(39);\n    setFood(initialFoodState);\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Snake Game</h1>\n        {isDesktop && !gameState.gameOver && (\n          <div className=\"infoCon\">\n            <p className=\"score\">Score: {gameState.score} </p>\n\n            <p>\n              {direction === 'stop'\n                ? 'Press arrow keys to continue'\n                : 'Press space bar to pause game'}\n            </p>\n          </div>\n        )}\n      </header>\n      {isDesktop && !gameState.gameOver && (\n        <div className=\"net\">\n          {net.map((cube) => {\n            return (\n              <Square\n                cube={cube}\n                key={Math.random().toString()}\n                bodyPart={checkBody(cube)}\n                food={food.y === cube.y && food.x === cube.x}\n              />\n            );\n          })}\n        </div>\n      )}\n      {!isDesktop && (\n        <p>\n          Please open this game on a full screen browser tab of a desktop\n          device.\n        </p>\n      )}\n      {gameState.gameOver && (\n        <div>\n          <h2>Game Over</h2>\n          <p>Oh no! you ate yourself.</p>\n          <button type=\"button\" onClick={restartHandler}>\n            Restart Game\n          </button>\n          <p className=\"score\">Your final Score: {gameState.score} </p>\n        </div>\n      )}\n      {isDesktop && <footer>Game created by omer zabtani // React.js </footer>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__1Zg7r\",\"on\":\"Square_on__1AOmW\",\"food\":\"Square_food__1Fo-M\",\"head\":\"Square_head__195Dj\",\"headOnStop\":\"Square_headOnStop__2dvc6\"};"],"sourceRoot":""}